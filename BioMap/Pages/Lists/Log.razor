@page "/Lists/Log"
@inject Microsoft.Extensions.Localization.IStringLocalizer<App> Localize
@inject DataService DS
@inject SessionData SD
@inject IJSRuntime JSRuntime
@using BioMap

<FilterSettings FilteringTarget="@Filters.FilteringTargetEnum.Log" />

<Row>
  <Column>
    <Card Margin="Margin.Is4.OnY">
      <CardHeader>
        <CardTitle>@Localize["Log"]</CardTitle>
      </CardHeader>
      <CardBody>
        <table class="table table-striped table-sm">
          <thead>
            <tr>
              <th scope="col">@Localize["Time"]</th>
              <th scope="col">@Localize["User"]</th>
              <th scope="col">@Localize["Action"]</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var le in LogEntries) {
              <tr>
                <td>@le.CreationTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                <td>@le.User</td>
                <td>@le.Action</td>
              </tr>
            }
          </tbody>
        </table>
      </CardBody>
      <CardFooter>
        <Button Class="float-right small" Color="Color.Primary" Clicked="((e)=> { LoadAll=true; RefreshData(); })">@Localize["Load all"]</Button>
      </CardFooter>
    </Card>
  </Column>
</Row>

@code {
  private int i = 0;
  private bool LoadAll = false;
  private LogEntry[] LogEntries = new LogEntry[0];
  protected override void OnInitialized() {
    base.OnInitialized();
    SD.Filters.FilterChanged+=(sender,ev) => {
      RefreshData();
      base.InvokeAsync(StateHasChanged);
    };
    RefreshData();
  }
  private void RefreshData() {
    this.LogEntries = DataService.Instance.GetLogEntries(SD.Filters,"","log.dt DESC",(uint)(this.LoadAll ? 0 : 200));
    StateHasChanged();
  }
}

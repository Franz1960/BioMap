@page "/Lists/NewElements"
@inject Microsoft.Extensions.Localization.IStringLocalizer<App> Localize
@inject NavigationManager NM
@inject DataService DS
@inject SessionData SD
@inject IJSRuntime JSRuntime
@using BioMap

<div style="height:60vh;overflow: hidden;">
  @if (ElementToMeasure!=null) {
    <Row Margin="Margin.Is1.OnY">
      <Column>
        <Blazor.ImageSurveyor.ImageSurveyor @ref="imageSurveyor"
                                            Height="60vh" />
      </Column>
      <Column ColumnSize="ColumnSize.Is2">
        <Row Margin="Margin.Is1.OnY">
          <Column>
            <Button Color="@(Raw?Color.Light:Color.Primary)" Disabled="@(false)" Clicked="@(()=>{ Raw=!Raw; })">
              <Icon Name="IconName.Crop"></Icon>
              @Localize["Display normalized"]
            </Button>
          </Column>
        </Row>
        <Row Margin="Margin.Is1.OnY">
          <Column>
            <Button Color="Color.Light" Disabled="@(!SD.CurrentUser.MayChangeElements)" Clicked="@(async (e)=>{ await ResetPositions_Clicked(ElementToMeasure); })">
              <Icon Name="IconName.Clear"></Icon>
              @Localize["Reset positions"]
            </Button>
          </Column>
        </Row>
        <Row Margin="Margin.Is1.OnY">
          <Column>
            <Field Horizontal="true">
              <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is6.OnDesktop">@Localize["Length"]</FieldLabel>
              <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is6.OnDesktop">
                <TextEdit Disabled="true" Text="@(ConvInvar.ToDecimalString(ElementToMeasure.ElementProp?.IndivData?.MeasuredData?.HeadBodyLength,1))" />
              </FieldBody>
            </Field>
          </Column>
        </Row>
      </Column>
    </Row>
  } else if (ElementToIdentify!=null) {
    <Row Margin="Margin.Is1.OnY">
      <Column>
      </Column>
    </Row>
  }
</div>
<div style="height: calc(40vh);overflow: auto;">
  <Row Margin="Margin.Is1.OnY">
    <Column>
      <Table Class="table-striped table-sm">
        <TableHeader>
          <TableRow>
            <TableHeaderCell Style="width:18%;">
              @Localize["Place"]
            </TableHeaderCell>
            <TableHeaderCell Style="width:15%;">
              @Localize["Time"]
            </TableHeaderCell>
            <TableHeaderCell Style="width:25%;">
              @Localize["Name"]
            </TableHeaderCell>
            <TableHeaderCell>
              @Localize["Image"]
            </TableHeaderCell>
            <TableHeaderCell>
              @Localize["Action"]
            </TableHeaderCell>
            <TableHeaderCell>
              @Localize["User"]
            </TableHeaderCell>
          </TableRow>
        </TableHeader>
        <TableBody>
          @foreach (var el in Elements) {
            <TableRow Background="@((ElementToMeasure==el || ElementToIdentify==el)?Background.Primary:Background.None)">
              <TableRowCell>
                @el.GetPlaceName()
              </TableRowCell>
              <TableRowCell>
                @el.GetIsoDateTime()
              </TableRowCell>
              <TableRowCell>
                <a href="javascript:void(0);" @onclick="()=>OnSelectClick(el)">@el.ElementName</a>
              </TableRowCell>
              <TableRowCell>
                @if (el.HasPhotoData()) {
                  <a href="javascript:void(0);" @onclick="()=>OnSelectClick(el)">
                    <Figure Size="FigureSize.Is96x96">
                      <FigureImage Source="@("api/photos/"+@el.ElementName+"?maxdim=96&Project="+@SD.CurrentUser.Project+"&ForceOrig=1")" AlternateText="@el.ElementName" />
                    </Figure>
                  </a>
                }
              </TableRowCell>
              <TableRowCell>
                <Button Color="Color.Light" Disabled="@(!SD.CurrentUser.MayChangeElements)" Clicked="@(async (e)=>{ await Measure_Clicked(el); })">
                  <Icon Name="IconName.Crop"></Icon>
                  @Localize["Measure#To_measure_length"]
                </Button>
                <Button Color="Color.Light" Disabled="@(!SD.CurrentUser.MayChangeElements)" Clicked="@(async (e)=>{ await Identify_Clicked(el); })">
                  <Icon Name="IconName.IdCard"></Icon>
                  @Localize["Identify"]
                </Button>
              </TableRowCell>
              <TableRowCell>
                @el.ElementProp.UploadInfo.UserId
                <Button Float="Float.Right" Color="Color.Light" Disabled="!SD.CurrentUser.MayDeleteElement(el)" Clicked="@(async (e)=>{ await DeleteElement(el); })">
                  <Icon Name="IconName.Delete"></Icon>
                </Button>
              </TableRowCell>
            </TableRow>
          }
        </TableBody>
      </Table>
    </Column>
  </Row>
</div>

<PhotoPopup @ref="PhotoPopup1" />

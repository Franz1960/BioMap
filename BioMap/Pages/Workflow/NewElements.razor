@page "/Workflow/NewElements"
@inject Microsoft.Extensions.Localization.IStringLocalizer<App> Localize
@inject NavigationManager NM
@inject DataService DS
@inject SessionData SD
@inject IJSRuntime JSRuntime
@using BioMap

      <div style="height:80vh;overflow: hidden;">
        <Row Margin="Margin.Is1.OnY">
          <Column>
            @if (ElementToMeasure!=null) {
              <Blazor.ImageSurveyor.ImageSurveyor @ref="imageSurveyor" Height="60vh" />
            }
            </Column>
          <Column ColumnSize="ColumnSize.Is3">
            <Row Margin="Margin.Is1.OnY">
              <Column>
                <UserFilter />
              </Column>
            </Row>
            <Divider />
            @if (ElementToMeasure!=null) {
              <Row Margin="Margin.Is1.OnY">
                <Column>
                  <strong>@ElementToMeasure.ElementName</strong><br />
                  <Icon Name="IconName.LocationArrow" /> @ElementToMeasure.GetPlaceName()<br />
                  <Icon Name="IconName.Clock" /> @ElementToMeasure.GetIsoDateTime()<br />
                  <Icon Name="IconName.User" /> @ElementToMeasure.ElementProp.UploadInfo.UserId
                </Column>
              </Row>
              <Divider />
              <Row Margin="Margin.Is1.OnY">
                <Column>
                  <RadioGroup TValue="string" @bind-CheckedValue="NewClass">
                    @foreach (var sClass in ElementClassification.ClassNames) {
                      @if (sClass!="New") {
                        <Radio Value="@(sClass)">@Localize[sClass]</Radio>
                      }
                    }
                  </RadioGroup>
                </Column>
              </Row>
              <Divider />
              <Row Margin="Margin.Is1.OnY">
                <Column>
                  <Button Color="@(Raw?Color.Light:Color.Primary)" Disabled="@(false)" Clicked="@(()=>{ Raw=!Raw; })" Block="true">
                    <Icon Name="IconName.Crop" Float="Float.Left" />
                    @Localize["Display normalized"]
                  </Button>
                </Column>
              </Row>
              <Row Margin="Margin.Is1.OnY">
                <Column>
                  <Button Color="Color.Light" Disabled="@(!SD.CurrentUser.MayChangeElements)" Clicked="@(async (e)=>{ await ResetPositions_Clicked(ElementToMeasure); })" Block="true">
                    <Icon Name="IconName.Clear" Float="Float.Left" />
                    @Localize["Reset positions"]
                  </Button>
                </Column>
              </Row>
              <Row Margin="Margin.Is1.OnY">
                <Column>
                  <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is6.OnDesktop">@Localize["Length"]</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is6.OnDesktop">
                      <TextEdit Disabled="true" Text="@(ConvInvar.ToDecimalString(ElementToMeasure.ElementProp?.IndivData?.MeasuredData?.HeadBodyLength,1))" />
                    </FieldBody>
                  </Field>
                </Column>
              </Row>
              <Divider />
              <Row Margin="Margin.Is1.OnY">
                <Column>
                  <Button Color="Color.Light" Clicked="@(async (e)=>{ await OnSelectPrev(); })" Block="true">
                    <Icon Name="IconName.StepBackward"></Icon>
                  </Button>
                </Column>
                <Column>
                  <Button Color="Color.Light" Clicked="@(async (e)=>{ await OnSelectNext(); })" Block="true">
                    <Icon Name="IconName.StepForward"></Icon>
                  </Button>
                </Column>
              </Row>
            }
          </Column>
        </Row>
      </div>

<PhotoPopup @ref="PhotoPopup1" />

@inject Microsoft.Extensions.Localization.IStringLocalizer<App> Localize
@using Microsoft.AspNetCore.Components.Forms
@inject DataService DS
@inject SessionData SD
@inject IJSRuntime JSRuntime
@using BioMap

<CardDeck>
  @if (FilteringTarget==Filters.FilteringTargetEnum.Log) {
  } else@if (FilteringTarget==Filters.FilteringTargetEnum.Notes) {
    <Card>
      <CardBody>
        <NotesFilter />
      </CardBody>
    </Card>
  } else {
    <Card>
      <CardBody>
        <DateFilter />
        <PlaceFilter />
      </CardBody>
    </Card>
    @if (FilteringTarget==Filters.FilteringTargetEnum.Individuals) {
      <Card>
        <CardBody>
          <IndiFilter />
        </CardBody>
      </Card>
      <Card>
        <CardBody>
          <GenderFilter />
          <HibernationsFilter />
          <OnlyFirstIndiFilter />
          <OnlyLastIndiFilter />
        </CardBody>
      </Card>
    }
    @if (FilteringTarget==Filters.FilteringTargetEnum.Elements) {
      <Card>
        <CardBody>
          <CatFilter />
        </CardBody>
      </Card>
    }
  }
</CardDeck>

@code {
  [Parameter]
  public Filters.FilteringTargetEnum FilteringTarget { get; set; }
  [Parameter]
  public EventCallback<EventArgs> OnAnyChangedCallback { get; set; }
  //
  protected override void OnInitialized() {
    SD.Filters.FilteringTarget=this.FilteringTarget;
  }
  private async void AnyValueChanged() {
    await this.OnAnyChangedCallback.InvokeAsync(EventArgs.Empty);
    StateHasChanged();
  }
}
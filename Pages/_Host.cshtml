@page "/"
@namespace BioMap.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
  Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>BioMap</title>
  <base href="~/" />
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.12.0/css/all.css">

  <link href="_content/Blazorise/blazorise.css" rel="stylesheet" />
  <link href="_content/Blazorise.Bootstrap/blazorise.bootstrap.css" rel="stylesheet" />
  <link href="_content/Blazorise.Sidebar/blazorise.sidebar.css" rel="stylesheet" />
  <!-- -->
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAj_oZeq6z3BnWFtE2Fwmh8RmquS5ar5xA&libraries=geometry"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
  <script src="_content/BlazorGoogleMaps/objectManager.js"></script>
  <script language="javascript" type="text/javascript" src="lib/glmatrix/gl-matrix-min.js"></script>
  <script language="javascript" type="text/javascript" src="lib/fhlib/fhutils.js"></script>
  <script language="javascript" type="text/javascript" src="scripts/cookies.js"></script>
  <script language="javascript" type="text/javascript" src="scripts/element.js"></script>
  @*<script language="javascript" type="text/javascript" src="scripts/place.js"></script>
    <script language="javascript" type="text/javascript" src="scripts/preppic.js"></script>
    <script language="javascript" type="text/javascript" src="scripts/identify.js"></script>
    <script language="javascript" type="text/javascript" src="scripts/geolocation.js"></script>*@
  <!-- Some styling -->
  <link href="css/site.css" rel="stylesheet" />
</head>
<body>
  <app>
    <component type="typeof(App)" render-mode="ServerPrerendered" />
  </app>

  <div id="app"></div>

  <!-- inside of body section and after the div/app tag  -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js" integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI" crossorigin="anonymous"></script>

  <script src="_content/Blazorise/blazorise.js"></script>
  <script src="_content/Blazorise.Bootstrap/blazorise.bootstrap.js"></script>

  <div id="blazor-error-ui">
    <environment include="Staging,Production">
      An error has occurred. This application may no longer respond until reloaded.
    </environment>
    <environment include="Development">
      An unhandled exception has occurred. See browser dev tools for details.
    </environment>
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
  </div>

  <dialog id="imgUploadDialog">
    <content>
      <div>
        <h3 style="text-align: center;">Fotos werden hochgeladen</h3>
      </div>
      <table id="imgUploadTable">
        <thead>
          <tr>
            <th>Datei</th>
            <th>Ergebnis</th>
          </tr>
        </thead>
      </table>
      <div>
        <button type="button" style="float: right;" onclick="document.getElementById('imgUploadDialog').close()">Schließen</button>
      </div>
    </content>
  </dialog>
  <script src="_framework/blazor.server.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
  <!-- This is the glue between Blazor and Chart.js -->
  <script src="_content/ChartJs.Blazor/ChartJsBlazorInterop.js"></script>
  <!-- Workarounds -->
  <script src="~/workaround-gradient.js"></script>

  <script>
    function ApiCall(sPhpFile, fetchArgs, aArgs) {
      return new Promise((resolve, reject) => {
        try {
          var sUrlParams = window.location.search;
          aArgs.forEach((arg, index, array) => {
            sUrlParams += ((sUrlParams.length < 1) ? '?' : '&') + arg.name + "=" + arg.value;
          });
          fetch(sPhpFile + sUrlParams, fetchArgs)
            .then((response) => {
              resolve(response);
            })
            .catch((error) => {
              if (reject) {
                reject(error);
              }
            })
            ;
        } catch (ex) {
          if (reject) {
            reject("" + ex);
          }
        }
      });
    }
    function UploadImageFiles_Init(idInput) {
      document.getElementById(idInput).addEventListener('change', UploadImageFiles, false);
    }
    function UploadImageFiles_Click(idInput) {
      document.getElementById(idInput).click();
    }
    function UploadImageFiles(evt) {
      //alert("UploadImageFiles() called.");
      const files = evt.target.files; // FileList object
      for (var iFile = 0; iFile < files.length; iFile++) {
        try {
          var file = files[iFile];
          if (file) {
            // Send selected file.
            const formData = new FormData();
            formData.append('files[]', file);
            ApiCall('/api/photos', {
              method: 'POST',
              body: formData
            }, [
            ])
              .then((response) => {
                response.text().then(function (text) {
                  //uploadElement(element);
                  //PicMapElementMgr.CreateMapMarker(element);
                  console.log(text);
                });
              })
              .catch((error) => {
                alert("Fehler: " + error);
              });
          } else {
            alert("Datei konnte nicht geladen werden.");
          }
        } catch (e) {
          alert("Exception: " + e);
        }
      }
    }
    function DownloadTextFile(filename, content) {
      const file = new File([content], filename, { type: "data:text/csv;charset=utf-8" });
      const exportUrl = URL.createObjectURL(file);
      const hiddenElement = document.createElement('a');
      hiddenElement.href = URL.createObjectURL(file);
      hiddenElement.target = '_blank';
      hiddenElement.download = filename;
      hiddenElement.click();
      URL.revokeObjectURL(hiddenElement.href);
    }
  </script>
</body>
</html>

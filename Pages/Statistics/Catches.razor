@page "/Statistics/Catches"
@inject Microsoft.Extensions.Localization.IStringLocalizer<App> Localize
@inject IJSRuntime JSRuntime
@using BioMap
@using ChartJs.Blazor.Common.Enums
@using ChartJs.Blazor.Common.Axes
@using ChartJs.Blazor.Common.Axes.Ticks
@using ChartJs.Blazor.Common
@using ChartJs.Blazor.Common.Handlers
@using ChartJs.Blazor.Common.Time
@using ChartJs.Blazor.LineChart
@using ChartJs.Blazor.BarChart
@using ChartJs.Blazor.BarChart.Axes

<FilterSettings FilteringTarget="@Filters.FilteringTargetEnum.Individuals" />

<h1>@Localize["Catches"]</h1>

<Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged" Pills="true">
  <Items>
    <Tab Name="OverTime">@Localize["Catch numbers over time"]</Tab>
    <Tab Name="PerMonth">@Localize["Catch numbers per month"]</Tab>
    <Tab Name="HeadBodyLength">@Localize["Head-body-length of all catches"]</Tab>
    <Tab Name="GenderRatio">@Localize["Gender"]</Tab>
    <Tab Name="MigrationDistances">@Localize["Migration distances"]</Tab>
  </Items>
  <Content>
    <TabPanel Name="OverTime">
      <Row>
        <Column>
          <Chart @ref="_chartJsOverTime" Config="@_configOverTime" Width="600" Height="300" />
        </Column>
      </Row>
      <Row>
        <Column>
          <table class="table table-sm table-striped text-right">
            <thead>
              <tr>
                <th scope="col">@Localize["Month"]</th>
                @foreach (var idxCol in Enumerable.Range(0,_configOverTime.Data.Datasets.Count)) {
                  @if (_configOverTime.Data.Datasets[idxCol] is BarDataset<int>) {
                    <th scope="col">@(((BarDataset<int>)_configOverTime.Data.Datasets[idxCol]).Label)</th>
                  } else if (_configOverTime.Data.Datasets[idxCol] is LineDataset<double>) {
                    <th scope="col">@(((LineDataset<double>)_configOverTime.Data.Datasets[idxCol]).Label)</th>
                  }
                }
              </tr>
            </thead>
            <tbody>
              @foreach (var idxRow in Enumerable.Range(0,((LineDataset<double>)_configOverTime.Data.Datasets[0]).Count)) {
                <tr>
                  <td scope="col">@_configOverTime.Data.Labels[idxRow]</td>
                  @foreach (var idxCol in Enumerable.Range(0,_configOverTime.Data.Datasets.Count)) {
                    @if (_configOverTime.Data.Datasets[idxCol] is BarDataset<int>) {
                      <td scope="col">@(((BarDataset<int>)_configOverTime.Data.Datasets[idxCol])[idxRow].ToString("0"))</td>
                    } else if (_configOverTime.Data.Datasets[idxCol] is LineDataset<double>) {
                      <td scope="col">@(((LineDataset<double>)_configOverTime.Data.Datasets[idxCol])[idxRow].ToString("0"))</td>
                    }
                  }
                </tr>
              }
            </tbody>
          </table>
        </Column>
      </Row>
    </TabPanel>
    <TabPanel Name="PerMonth">
      <Row>
        <Column>
          <Chart @ref="_chartJsPerMonth" Config="@_configPerMonth" Width="600" Height="300" />
        </Column>
      </Row>
      <Row>
        <Column>
          <table class="table table-sm table-striped text-right">
            <thead>
              <tr>
                <th scope="col">@Localize["Month"]</th>
                @foreach (var idxCol in Enumerable.Range(0,_configPerMonth.Data.Datasets.Count)) {
                  @if (_configPerMonth.Data.Datasets[idxCol] is BarDataset<int>) {
                    <th scope="col">@(((BarDataset<int>)_configPerMonth.Data.Datasets[idxCol]).Label)</th>
                  } else if (_configPerMonth.Data.Datasets[idxCol] is LineDataset<double>) {
                    <th scope="col">@(((LineDataset<double>)_configPerMonth.Data.Datasets[idxCol]).Label)</th>
                  }
                }
              </tr>
            </thead>
            <tbody>
              @foreach (var idxRow in Enumerable.Range(0,((LineDataset<double>)_configPerMonth.Data.Datasets[0]).Count)) {
                <tr>
                  <td scope="col">@_configPerMonth.Data.Labels[idxRow]</td>
                  @foreach (var idxCol in Enumerable.Range(0,_configPerMonth.Data.Datasets.Count)) {
                    @if (_configPerMonth.Data.Datasets[idxCol] is BarDataset<int>) {
                      <td scope="col">@(((BarDataset<int>)_configPerMonth.Data.Datasets[idxCol])[idxRow].ToString("0"))</td>
                    } else if (_configPerMonth.Data.Datasets[idxCol] is LineDataset<double>) {
                      <td scope="col">@(((LineDataset<double>)_configPerMonth.Data.Datasets[idxCol])[idxRow].ToString("0"))</td>
                    }
                  }
                </tr>
              }
            </tbody>
          </table>
        </Column>
      </Row>
    </TabPanel>
    <TabPanel Name="HeadBodyLength">
      <Row>
        <Column>
          <Chart @ref="_chartJsHeadBodyLength" Config="@_configHeadBodyLength" Width="600" Height="300" />
        </Column>
      </Row>
      <Row>
        <Column>
          <table class="table table-sm table-striped text-right">
            <thead>
              <tr>
                <th scope="col">@Localize["Length"] / mm</th>
                @foreach (var idxCol in Enumerable.Range(0,_configHeadBodyLength.Data.Datasets.Count)) {
                  @if (_configHeadBodyLength.Data.Datasets[idxCol] is BarDataset<int>) {
                    <th scope="col">@(((BarDataset<int>)_configHeadBodyLength.Data.Datasets[idxCol]).Label)</th>
                  } else if (_configHeadBodyLength.Data.Datasets[idxCol] is LineDataset<double>) {
                    <th scope="col">@(((LineDataset<double>)_configHeadBodyLength.Data.Datasets[idxCol]).Label)</th>
                  }
                }
              </tr>
            </thead>
            <tbody>
              @foreach (var idxRow in Enumerable.Range(0,((BarDataset<int>)_configHeadBodyLength.Data.Datasets[0]).Count)) {
                <tr>
                  <td scope="col">@_configHeadBodyLength.Data.Labels[idxRow]</td>
                  @foreach (var idxCol in Enumerable.Range(0,_configHeadBodyLength.Data.Datasets.Count)) {
                    @if (_configHeadBodyLength.Data.Datasets[idxCol] is BarDataset<int>) {
                      <td scope="col">@(((BarDataset<int>)_configHeadBodyLength.Data.Datasets[idxCol])[idxRow].ToString("0"))</td>
                    } else if (_configHeadBodyLength.Data.Datasets[idxCol] is LineDataset<double>) {
                      <td scope="col">@(((LineDataset<double>)_configHeadBodyLength.Data.Datasets[idxCol])[idxRow].ToString("0"))</td>
                    }
                  }
                </tr>
              }
            </tbody>
          </table>
        </Column>
      </Row>
    </TabPanel>
    <TabPanel Name="GenderRatio">
      <Row>
        <Column>
          <Chart @ref="_chartJsGenderRatio" Config="@_configGenderRatio" Width="600" Height="300" />
        </Column>
      </Row>
      <Row>
        <Column>
          <table class="table table-sm table-striped text-right">
            <thead>
              <tr>
                <th scope="col">@Localize["Month"]</th>
                @foreach (var idxCol in Enumerable.Range(0,_configGenderRatio.Data.Datasets.Count)) {
                  @if (_configGenderRatio.Data.Datasets[idxCol] is BarDataset<int>) {
                    <th scope="col">@(((BarDataset<int>)_configGenderRatio.Data.Datasets[idxCol]).Label)</th>
                  } else if (_configGenderRatio.Data.Datasets[idxCol] is LineDataset<double>) {
                    <th scope="col">@(((LineDataset<double>)_configGenderRatio.Data.Datasets[idxCol]).Label)</th>
                  }
                }
              </tr>
            </thead>
            <tbody>
              @foreach (var idxRow in Enumerable.Range(0,((BarDataset<int>)_configGenderRatio.Data.Datasets[0]).Count)) {
              <tr>
                <td scope="col">@_configGenderRatio.Data.Labels[idxRow]</td>
                @foreach (var idxCol in Enumerable.Range(0,_configGenderRatio.Data.Datasets.Count)) {
                  @if (_configGenderRatio.Data.Datasets[idxCol] is BarDataset<int>) {
                    <td scope="col">@(((BarDataset<int>)_configGenderRatio.Data.Datasets[idxCol])[idxRow].ToString("0"))</td>
                  } else if (_configGenderRatio.Data.Datasets[idxCol] is LineDataset<double>) {
                    <td scope="col">@(((LineDataset<double>)_configGenderRatio.Data.Datasets[idxCol])[idxRow].ToString("0"))</td>
                  }
                }
              </tr>
              }
            </tbody>
          </table>
        </Column>
      </Row>
    </TabPanel>
    <TabPanel Name="MigrationDistances">
      <Row>
        <Column>
          <Chart @ref="_chartJsMigrationDistances" Config="@_configMigrationDistances" Width="600" Height="300" />
        </Column>
      </Row>
      <Row>
        <Column>
          <table class="table table-sm table-striped text-right">
            <thead>
              <tr>
                <th scope="col">@Localize["Distance"] / m</th>
                @foreach (var idxCol in Enumerable.Range(0,_configMigrationDistances.Data.Datasets.Count)) {
                  <th scope="col">@(((BarDataset<int>)_configMigrationDistances.Data.Datasets[idxCol]).Label)</th>
                }
              </tr>
            </thead>
            <tbody>
              @foreach (var idxRow in Enumerable.Range(0,((BarDataset<int>)_configMigrationDistances.Data.Datasets[0]).Count)) {
                <tr>
                  <td scope="col">@_configMigrationDistances.Data.Labels[idxRow]</td>
                  @foreach (var idxCol in Enumerable.Range(0,_configMigrationDistances.Data.Datasets.Count)) {
                    <td scope="col">@(((BarDataset<int>)_configMigrationDistances.Data.Datasets[idxCol])[idxRow].ToString("0"))</td>
                  }
                </tr>
              }
            </tbody>
          </table>
        </Column>
      </Row>
    </TabPanel>
  </Content>
</Tabs>

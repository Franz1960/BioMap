@page "/Lists/Notes"
@inject Microsoft.Extensions.Localization.IStringLocalizer<App> Localize
@inject DataService DS
@inject SessionData SD
@inject IJSRuntime JSRuntime
@using BioMap

<FilterSettings FilteringTarget="@Filters.FilteringTargetEnum.Notes" />
<NotePopup @ref="refNotePopup" />

<h1>@Localize["Notes"]</h1>

@*<DataGrid TItem="ProtocolEntry" Data="ProtocolEntries" Editable="true" EditMode="DataGridEditMode.Inline">
  <DataGridColumns>
    <DataGridCommandColumn TItem="ProtocolEntry" Width="170px">
      <NewCommandTemplate>
      </NewCommandTemplate>
      <EditCommandTemplate>
        <Button Color="Color.Primary" Clicked="@context.Clicked">Edit</Button>
      </EditCommandTemplate>
      <SaveCommandTemplate>
        <Button Color="Color.Primary" Clicked="@context.Clicked">Save</Button>
      </SaveCommandTemplate>
      <DeleteCommandTemplate>
        <Button Color="Color.Danger" Clicked="@context.Clicked">Delete</Button>
      </DeleteCommandTemplate>
      <CancelCommandTemplate>
        <Button Color="Color.Secondary" Clicked="@context.Clicked">Cancel</Button>
      </CancelCommandTemplate>
      <ClearFilterCommandTemplate>
        <Button Color="Color.Warning" Clicked="@context.Clicked">Clear Filter</Button>
      </ClearFilterCommandTemplate>
    </DataGridCommandColumn>
    <DataGridColumn TItem="ProtocolEntry" Field="@nameof(ProtocolEntry.CreationTime)" Caption="@Localize["Time"]" Sortable="true" />
    <DataGridColumn TItem="ProtocolEntry" Field="@nameof(ProtocolEntry.Author)" Caption="@Localize["Author"]" Sortable="true" />
    <DataGridColumn TItem="ProtocolEntry" Field="@nameof(ProtocolEntry.Text)" Caption="@Localize["Text"]" Editable="true">
    </DataGridColumn>
  </DataGridColumns>
</DataGrid>*@

<table class="table table-striped">
  <thead>
    <tr>
      <th scope="col">@Localize["Time"]<br />@Localize["Author"]</th>
      <th scope="col">@Localize["Text"]</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var idx in Enumerable.Range(0,ProtocolEntries.Length)) {
      <tr>
        <td>@ProtocolEntries[idx].CreationTime.ToString("yyyy-MM-dd")<br />@ProtocolEntries[idx].Author</td>
        <td>
          @((MarkupString)ProtocolEntries[idx].Text)
          <Button Float="Float.Right" Color="Color.Light" Clicked="@((e)=>{ refNotePopup.Show(ProtocolEntries[idx]); })"><Icon Name="IconName.Edit"></Icon></Button>
        </td>
      </tr>
    }
  </tbody>
</table>

@code {
  private int i = 0;
  private NotePopup refNotePopup;
  private ProtocolEntry[] ProtocolEntries = new ProtocolEntry[0];
  protected override void OnInitialized() {
    base.OnInitialized();
    SD.Filters.FilterChanged+=(sender,ev) => {
      RefreshData();
      base.InvokeAsync(StateHasChanged);
    };
    RefreshData();
  }
  private void RefreshData() {
    this.ProtocolEntries = DataService.Instance.GetProtocolEntries(SD.Filters,"","notes.dt DESC");
  }
}

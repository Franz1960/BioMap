@page "/Lists/AllElements"
@inject Microsoft.Extensions.Localization.IStringLocalizer<App> Localize
@inject DataService DS
@inject SessionData SD
@inject IJSRuntime JSRuntime
@using BioMap

<Row>
  <Column>
    <FilterSettings FilteringTarget="@Filters.FilteringTargetEnum.Elements" />
  </Column>
</Row>
<Row>
  <Column>
    <h1>@Localize["All Elements"]</h1>
  </Column>
</Row>
<Row>
  <Column>
    <p>Anzahl Elemente: @Elements.Length</p>
  </Column>
</Row>
<Row>
  <Column>
    <Table Class="table-striped table-sm">
      <TableHeader>
        <TableRow>
          <TableHeaderCell>
            @Localize["Cat."]
          </TableHeaderCell>
          <TableHeaderCell Style="width:18%;">
            @Localize["Details"]
          </TableHeaderCell>
          <TableHeaderCell Style="width:15%;">
            @Localize["Time"]
          </TableHeaderCell>
          <TableHeaderCell Style="width:25%;">
            @Localize["Name"]
          </TableHeaderCell>
          <TableHeaderCell>
            @Localize["User"]
          </TableHeaderCell>
        </TableRow>
      </TableHeader>
      <TableBody>
        @foreach (var el in Elements) {
          <TableRow>
            <TableRowCell>
              @el.ElementProp.MarkerInfo.category
            </TableRowCell>
            <TableRowCell>
              @el.GetDetails()
            </TableRowCell>
            <TableRowCell>
              @el.GetIsoDateTime()
            </TableRowCell>
            <TableRowCell>
              <a href="javascript:void(0);" @onclick="()=>OnSelectClick(el)">@el.ElementName</a>
            </TableRowCell>
            <TableRowCell>
              @el.ElementProp.UploadInfo.UserId
              <Button Float="Float.Right" Color="Color.Light" Disabled="!SD.CurrentUser.MayDeleteElement(el)" Clicked="@((e)=>{ DeleteElement(el); })">
                <Icon Name="IconName.Delete"></Icon>
              </Button>
            </TableRowCell>
          </TableRow>
        }
      </TableBody>
    </Table>
  </Column>
</Row>
<Row>
  <Column>
    @if (SD.CurrentUser.Level>=500) {
      <Button Color="Color.Primary" Clicked="@(async (e)=>DownloadCsv_Clicked())">Download CSV</Button>
    }
  </Column>
</Row>

<PhotoPopup @ref="PhotoPopup1" />

@code {
  private Element[] Elements = new Element[0];
  private PhotoPopup PhotoPopup1;
  protected override void OnInitialized() {
    base.OnInitialized();
    SD.Filters.FilterChanged+=(sender,ev) => {
      RefreshData();
      base.InvokeAsync(StateHasChanged);
    };
    RefreshData();
  }
  private void RefreshData() {
    this.Elements = Elements = DS.GetElements(SD,SD.Filters,"","elements.creationtime DESC");
  }
  private void OnSelectClick(Element el) {
    this.PhotoPopup1.Show(el);
  }
  private void DeleteElement(Element el) {
    DS.DeleteElement(el);
    DS.AddLogEntry(SD.CurrentUser.EMail,"Deleted element "+el.ElementName);
    RefreshData();
    StateHasChanged();
  }
  private async void DownloadCsv_Clicked() {
    var sep = "\t";
    var csv = new System.Text.StringBuilder();
    csv.Append("ElementName"+sep+"TimeStamp"+sep+"Cat"+sep+"GpsLat"+sep+"GpsLng"+sep+"Place"+"\n");
    foreach (var el in DS.GetElements(SD,SD.Filters)) {
      var place = el.GetPlace();
      csv.Append('"'+el.ElementName+'"');
      csv.Append(sep+'"'+el.GetIsoDateTime()+'"');
      csv.Append(sep+'"'+el.GetCategoryNum()+'"');
      csv.Append(sep+ConvInvar.ToDecimalString(el.ElementProp.MarkerInfo.position.lat,12));
      csv.Append(sep+ConvInvar.ToDecimalString(el.ElementProp.MarkerInfo.position.lng,12));
      csv.Append(sep+(place==null ? "" : place.Name));
      csv.Append('\n');
    }
    await JSRuntime.InvokeVoidAsync("DownloadTextFile","AllElements.csv",csv.ToString());
  }
}

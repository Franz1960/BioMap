@page "/Lists/AllElements"
@inject Microsoft.Extensions.Localization.IStringLocalizer<App> Localize
@inject DataService DS
@inject SessionData SD
@inject IJSRuntime JSRuntime
@using BioMap

<FilterSettings FilteringTarget="@Filters.FilteringTargetEnum.Elements" />

<h1>@Localize["All Elements"]</h1>

<p>Anzahl Elemente: @Elements.Length</p>

<PhotoPopup @ref="PhotoPopup1" />

<table class="table table-striped table-sm">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">@Localize["Cat."]</th>
      <th scope="col" width="18%">@Localize["Details"]</th>
      <th scope="col" width="15%">@Localize["Time"]</th>
      <th scope="col" width="25%">@Localize["Name"]</th>
      <th scope="col">@Localize["User"]</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var el in Elements) {
      <tr>
        <th scope="row">@(i++)</th>
        <td>@el.ElementProp.MarkerInfo.category</td>
        <td>@el.GetDetails()</td>
        <td>@el.GetIsoDateTime()</td>
        <td><a href="javascript:void(0);" @onclick="()=>OnSelectClick(el)">@el.ElementName</a></td>
        <td>@el.ElementProp.UploadInfo.UserId</td>
      </tr>
    }
  </tbody>
</table>

@if (SD.CurrentUser.Level>=500) {
  <Button Color="Color.Primary" Clicked="@(async (e)=>DownloadCsv_Clicked())">Download CSV</Button>
}

@code {
  private int i = 0;
  private Element[] Elements = new Element[0];
  private PhotoPopup PhotoPopup1;
  protected override void OnInitialized() {
    base.OnInitialized();
    SD.Filters.FilterChanged+=(sender,ev) => {
      RefreshData();
      base.InvokeAsync(StateHasChanged);
    };
    RefreshData();
  }
  private void RefreshData() {
    this.Elements = Elements = DS.GetElements(SD.Filters,"","elements.creationtime DESC");
    i=0;
  }
  private void OnSelectClick(Element el) {
    this.PhotoPopup1.Show(el);
  }
  private async void DownloadCsv_Clicked() {
    var sep = "\t";
    var csv = new System.Text.StringBuilder();
    csv.Append("ElementName"+sep+"TimeStamp"+sep+"Cat"+sep+"GpsLat"+sep+"GpsLng"+sep+"Place"+"\n");
    foreach (var el in DS.GetElements(SD.Filters)) {
      var place = el.GetPlace();
      csv.Append('"'+el.ElementName+'"');
      csv.Append(sep+'"'+el.GetIsoDateTime()+'"');
      csv.Append(sep+'"'+el.GetCategoryNum()+'"');
      csv.Append(sep+ConvInvar.ToDecimalString(el.ElementProp.MarkerInfo.position.lat,12));
      csv.Append(sep+ConvInvar.ToDecimalString(el.ElementProp.MarkerInfo.position.lng,12));
      csv.Append(sep+(place==null ? "" : place.Name));
      csv.Append('\n');
    }
    await JSRuntime.InvokeVoidAsync("DownloadTextFile","AllElements.csv",csv.ToString());
  }
}

@page "/lists/all_individuals"
@inject Microsoft.Extensions.Localization.IStringLocalizer<App> Localize
@inject DataService DS
@inject IJSRuntime JSRuntime
@using BioMap

<h1>@Localize["All Individuals"]</h1>

<p>Anzahl Individuen: @Individuals.Count</p>

<table class="table table-striped">
  <thead>
    <tr>
      <th scope="col">IID</th>
      <th scope="col">@Localize["Vintage"]</th>
      <th scope="col">@Localize["Gender"]</th>
      <th scope="col">@Localize["Length"]</th>
      <th scope="col">@Localize["Place"]</th>
      <th scope="col">ID</th>
      <th scope="col">@Localize["Time"]</th>
      <th scope="col">@Localize["User"]</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var iid in Individuals.Keys) {
    <tr>
      <th scope="row">@(iid)</th>
      <td>@((MarkupString)GetForElements(iid,el=>el.GetYearOfBirthAsString()))</td>
      <td>@((MarkupString)GetForElements(iid,el=>el.GetGender()))</td>
      <td>@((MarkupString)GetForElements(iid,el=>el.GetHeadBodyLengthNice()))</td>
      <td>@((MarkupString)GetForElements(iid,el=>el.GetPlace().Name))</td>
      <td>@((MarkupString)GetForElements(iid,el=>el.ElementName))</td>
      <td>@((MarkupString)GetForElements(iid,el=>el.GetIsoDate()))</td>
      <td>@((MarkupString)GetForElements(iid,el=>el.ElementProp.UploadInfo.UserId))</td>
    </tr>
    }
    </tbody>
</table>

@code {
  private Dictionary<int,List<Element>> Individuals = DataService.Instance.GetIndividuals();
  private string GetForElements(int iid,Func<Element,string> func) {
    var sb = new System.Text.StringBuilder();
    string sPreFix = "";
    foreach (var el in this.Individuals[iid]) {
      sb.Append(sPreFix+func(el));
      sPreFix="<br/>";
    }
    return sb.ToString();
  }
}
